plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
}

def loadProperties(filename) {
    def propertiesFile = rootProject.file(filename)
    def properties = new Properties()
    if (propertiesFile != null && propertiesFile.exists()) {
        properties.load(new FileInputStream(propertiesFile))
        return properties
    }
    return null
}
def secrets = loadProperties("secrets_key.properties")
def versionProperties = loadProperties("version.properties")

def code = versionProperties['versionCode'].toInteger()
def name = versionProperties['versionName']

android {
    namespace 'com.hienthai.baseprojectmvvm'
    compileSdk 33

    defaultConfig {
        applicationId "com.hienthai.baseprojectmvvm"
        minSdk 24
        targetSdk 33
        versionCode code
        versionName name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    def ValString = "String"
    def APP_NAME = "APP_NAME"
    def APP_ID = "APP_ID"

    flavorDimensions "release"
    signingConfigs {
        release {
            keyAlias secrets['keyAlias']
            keyPassword secrets['keyPassword']
            storeFile rootProject.file(secrets['storeFile'])
            storePassword secrets['storePassword']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        local {
            dimension "release"
            buildConfigField(ValString, APP_NAME, APP_NAME_LOCAL)
        }

        stg {
            dimension "release"
            buildConfigField(ValString, APP_NAME, APP_NAME_STG)
        }

        product {
            dimension "release"
            buildConfigField(ValString, APP_NAME, APP_NAME_PRODUCT)
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def appName = APP_NAME
            def date = new Date()
            def formattedDate = date.format('yyyyMMdd')
            def buildType = variant.buildType.name
            def flavor = variant.productFlavors[0].name

            outputFileName = appName + '_' + formattedDate + '_' + flavor + '_' + buildType + '_' + versionName + '.apk'
        }
    }

    buildFeatures {
        viewBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.github.bumptech.glide:glide:4.14.2'

    //
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'com.jakewharton.timber:timber:5.0.1'

    // DI
    implementation 'io.insert-koin:koin-android:3.3.2'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    // Room DB
    implementation 'androidx.room:room-runtime:2.5.0'
    implementation 'androidx.room:room-ktx:2.5.0'
    kapt 'androidx.room:room-compiler:2.5.0'

}